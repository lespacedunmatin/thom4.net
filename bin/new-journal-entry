#!/usr/bin/env node

const {choose, prompt, confirm} = require('promptly')
const {spawnSync} = require('child_process')
const {tmpdir} = require('os')
const {join} = require('path')
const {mkdtemp, readFile, open:openFile} = require('fs').promises
const H = require('hexo')
const { slugize } = require('hexo-util')
const moment = require('moment')
const hexo = new H(process.cwd(), {})

hexo.init().then(async () => {
  const title = await prompt('Title: ')
  const slug = await prompt(`Slug [${slugize(title.toLocaleLowerCase())}]`, {default: slugize(title.toLocaleLowerCase())})
  const lang = await choose('Lang [fr-FR]: ', ['fr-FR', 'en-GB'], {default: 'fr-FR'})
  const categories = ['Journal']
    .concat((await prompt('Categories []: ', {default: ''})).split(','))
    .filter(c => c)
  const content = await mkdtemp(join(tmpdir(), 'oncletom-journal'))
    .then(async (folder) => {
      await openFile(`${folder}/${slug}.md`, 'w+')
      spawnSync('open', ['--wait-apps', `${folder}/${slug}.md`], {shell: true, stdio: 'ignore'})
      return readFile(`${folder}/${slug}.md`, 'utf8')
    })

  const now = moment()
  const permalink = `${now.format('MM[/]DD')}/${slug}`
  const path = `${now.format('YYYY[/]MM')}/${slug}`

  return {title, content, categories, lang, permalink, path, layout: 'journal'}
})
.then((data) => hexo.post.create(data, true))
.catch(error => {
  // manually cancelled prompts do no throw
  if (error.message.match('canceled')) {
    return true
  }

  throw error
})
